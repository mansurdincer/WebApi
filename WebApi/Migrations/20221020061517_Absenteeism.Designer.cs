// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Data;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221020061517_Absenteeism")]
    partial class Absenteeism
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("WebApi.Entities.Absenteeism", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AbsenteeismTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Author")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Editor")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AbsenteeismTypeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Absenteeism");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AbsenteeismTypeId = 1,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1322),
                            Editor = 0,
                            EmployeeId = 1,
                            EndDate = new DateTime(2021, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            IsDeleted = false,
                            StartDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AbsenteeismTypeId = 2,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1326),
                            Editor = 0,
                            EmployeeId = 2,
                            EndDate = new DateTime(2021, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            IsDeleted = false,
                            StartDate = new DateTime(2021, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AbsenteeismTypeId = 3,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1328),
                            Editor = 0,
                            EmployeeId = 3,
                            EndDate = new DateTime(2021, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            IsDeleted = false,
                            StartDate = new DateTime(2021, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AbsenteeismTypeId = 4,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1329),
                            Editor = 0,
                            EmployeeId = 4,
                            EndDate = new DateTime(2021, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            IsDeleted = false,
                            StartDate = new DateTime(2021, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            AbsenteeismTypeId = 5,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1330),
                            Editor = 0,
                            EmployeeId = 5,
                            EndDate = new DateTime(2021, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            IsDeleted = false,
                            StartDate = new DateTime(2021, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            AbsenteeismTypeId = 6,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1331),
                            Editor = 0,
                            EmployeeId = 6,
                            EndDate = new DateTime(2021, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            IsDeleted = false,
                            StartDate = new DateTime(2021, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("WebApi.Entities.AbsenteeismType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Author")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Editor")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AbsenteeismType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1171),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Ameliyat"
                        },
                        new
                        {
                            Id = 2,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1180),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Covid"
                        },
                        new
                        {
                            Id = 3,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1181),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Doğum"
                        },
                        new
                        {
                            Id = 4,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1181),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Mazeretsiz"
                        },
                        new
                        {
                            Id = 5,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1233),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Hastalık"
                        },
                        new
                        {
                            Id = 6,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1235),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "İş Kazası"
                        },
                        new
                        {
                            Id = 7,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1236),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Ücretsiz İzin"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Author")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Editor")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1353),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Kırtasiye"
                        },
                        new
                        {
                            Id = 2,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1354),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Elektronik"
                        },
                        new
                        {
                            Id = 3,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1355),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Giyim"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Author")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Editor")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6451),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "IT"
                        },
                        new
                        {
                            Id = 2,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6453),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "QA"
                        },
                        new
                        {
                            Id = 3,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6454),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Sales"
                        },
                        new
                        {
                            Id = 4,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6455),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 5,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6455),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Accounting"
                        },
                        new
                        {
                            Id = 6,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6456),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Finance"
                        },
                        new
                        {
                            Id = 7,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6457),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Author")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfDismissal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfEmployment")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("Editor")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RankId")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SeniorityId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("RankId");

                    b.HasIndex("SeniorityId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6470),
                            DateOfEmployment = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Editor = 0,
                            Email = "mansur.dincer@filidea.com.tr",
                            IsActive = false,
                            IsDeleted = false,
                            JobTitleId = 3,
                            Name = "Mansur",
                            RankId = 1,
                            RegistrationNo = "10001",
                            SeniorityId = 1,
                            Surname = "Dinçer"
                        },
                        new
                        {
                            Id = 2,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6474),
                            DateOfEmployment = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Editor = 0,
                            Email = "dondu.yilmaz@filidea.com.tr",
                            IsActive = false,
                            IsDeleted = false,
                            JobTitleId = 2,
                            Name = "Döndü",
                            RankId = 2,
                            RegistrationNo = "10002",
                            SeniorityId = 2,
                            Surname = "Yılmaz"
                        },
                        new
                        {
                            Id = 3,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6476),
                            DateOfEmployment = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Editor = 0,
                            Email = "muhammer.sayin@filidea.com.tr",
                            IsActive = false,
                            IsDeleted = false,
                            JobTitleId = 3,
                            Name = "Muhammer",
                            RankId = 3,
                            RegistrationNo = "10003",
                            SeniorityId = 3,
                            Surname = "Sayın"
                        },
                        new
                        {
                            Id = 4,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6478),
                            DateOfEmployment = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Editor = 0,
                            Email = "abdullah.kasim@filidea.com.tr",
                            IsActive = false,
                            IsDeleted = false,
                            JobTitleId = 2,
                            Name = "Abdullah",
                            RankId = 4,
                            RegistrationNo = "10004",
                            SeniorityId = 4,
                            Surname = "Kasım"
                        },
                        new
                        {
                            Id = 5,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6479),
                            DateOfEmployment = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 6,
                            Editor = 0,
                            Email = "fahri.yilmaz@filidea.com.tr",
                            IsActive = false,
                            IsDeleted = false,
                            JobTitleId = 3,
                            Name = "Fahri",
                            RankId = 5,
                            RegistrationNo = "10005",
                            SeniorityId = 5,
                            Surname = "Yılmaz"
                        },
                        new
                        {
                            Id = 6,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6480),
                            DateOfEmployment = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            Editor = 0,
                            Email = "mustafa.kalaycioglu@filidea.com.tr",
                            IsActive = false,
                            IsDeleted = false,
                            JobTitleId = 2,
                            Name = "Mustafa",
                            RankId = 6,
                            RegistrationNo = "10006",
                            SeniorityId = 1,
                            Surname = "Kalaycıoğlu"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.JobTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Author")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Editor")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("JobTitle");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6435),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "CEO"
                        },
                        new
                        {
                            Id = 2,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6437),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6438),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Employee"
                        },
                        new
                        {
                            Id = 4,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6439),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Intern"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Author")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Editor")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = 0,
                            CategoryId = 1,
                            Cost = 0m,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1371),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Kitap",
                            Price = 0,
                            Stock = 0
                        },
                        new
                        {
                            Id = 2,
                            Author = 0,
                            CategoryId = 1,
                            Cost = 0m,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1373),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Defter",
                            Price = 0,
                            Stock = 0
                        },
                        new
                        {
                            Id = 3,
                            Author = 0,
                            CategoryId = 2,
                            Cost = 0m,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1374),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Bilgisayar",
                            Price = 0,
                            Stock = 0
                        },
                        new
                        {
                            Id = 4,
                            Author = 0,
                            CategoryId = 2,
                            Cost = 0m,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1375),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Tablet",
                            Price = 0,
                            Stock = 0
                        },
                        new
                        {
                            Id = 5,
                            Author = 0,
                            CategoryId = 3,
                            Cost = 0m,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1376),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Pantolon",
                            Price = 0,
                            Stock = 0
                        },
                        new
                        {
                            Id = 6,
                            Author = 0,
                            CategoryId = 3,
                            Cost = 0m,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 954, DateTimeKind.Local).AddTicks(1376),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Etek",
                            Price = 0,
                            Stock = 0
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Rank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Author")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Editor")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("Multiplier")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rank");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6290),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Multiplier = 1f,
                            Name = "Kademe Yok"
                        },
                        new
                        {
                            Id = 2,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6292),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Multiplier = 1.232f,
                            Name = "4. Kademe"
                        },
                        new
                        {
                            Id = 3,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6293),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Multiplier = 1.15f,
                            Name = "3. Kademe"
                        },
                        new
                        {
                            Id = 4,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6293),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Multiplier = 1.077f,
                            Name = "2. Kademe"
                        },
                        new
                        {
                            Id = 5,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6294),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Multiplier = 1f,
                            Name = "1. Kademe"
                        },
                        new
                        {
                            Id = 6,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6295),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Multiplier = 1.287f,
                            Name = "En 4. Kademe"
                        },
                        new
                        {
                            Id = 7,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6296),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Multiplier = 1.19f,
                            Name = "En 3. Kademe"
                        },
                        new
                        {
                            Id = 8,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6296),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Multiplier = 1f,
                            Name = "En 2. Kademe"
                        },
                        new
                        {
                            Id = 9,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6297),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Multiplier = 1f,
                            Name = "En 1. Kademe"
                        },
                        new
                        {
                            Id = 10,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6299),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Multiplier = 1.378f,
                            Name = "Mek 3. Kademe"
                        },
                        new
                        {
                            Id = 11,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6366),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Multiplier = 1.159f,
                            Name = "Mek 2. Kademe"
                        },
                        new
                        {
                            Id = 12,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6368),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Multiplier = 1f,
                            Name = "Mek 1. Kademe"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Author")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Editor")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6404),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6406),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Seniority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Author")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Editor")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("Multiplier")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Seniorities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6162),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Multiplier = 0f,
                            Name = "Şef Müdür"
                        },
                        new
                        {
                            Id = 2,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6174),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Multiplier = 0f,
                            Name = "Grup Lideri"
                        },
                        new
                        {
                            Id = 3,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6175),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Multiplier = 0f,
                            Name = "Takım Lideri"
                        },
                        new
                        {
                            Id = 4,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6176),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Multiplier = 13.5f,
                            Name = "Takım Lider Yardımcısı"
                        },
                        new
                        {
                            Id = 5,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6177),
                            Editor = 0,
                            IsActive = false,
                            IsDeleted = false,
                            Multiplier = 18.5f,
                            Name = "Operatör"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Author")
                        .HasColumnType("int");

                    b.Property<bool>("Confirmation")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Editor")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = 0,
                            Confirmation = false,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6389),
                            Editor = 0,
                            Email = "",
                            IsActive = false,
                            IsDeleted = false,
                            Password = "1",
                            RoleId = 0,
                            Username = "Mansur"
                        },
                        new
                        {
                            Id = 2,
                            Author = 0,
                            Confirmation = false,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6391),
                            Editor = 0,
                            Email = "",
                            IsActive = false,
                            IsDeleted = false,
                            Password = "1",
                            RoleId = 0,
                            Username = "Dondu"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Author")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Editor")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6416),
                            Editor = 0,
                            Id = 0,
                            IsActive = false,
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2,
                            Author = 0,
                            CreatedDate = new DateTime(2022, 10, 20, 9, 15, 16, 949, DateTimeKind.Local).AddTicks(6417),
                            Editor = 0,
                            Id = 0,
                            IsActive = false,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("WebApi.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.Entities.Absenteeism", b =>
                {
                    b.HasOne("WebApi.Entities.AbsenteeismType", "AbsenteeismType")
                        .WithMany("Absenteeisms")
                        .HasForeignKey("AbsenteeismTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AbsenteeismType");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WebApi.Entities.Department", b =>
                {
                    b.HasOne("WebApi.Entities.Department", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("WebApi.Entities.Employee", b =>
                {
                    b.HasOne("WebApi.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("WebApi.Entities.JobTitle", "JobTitle")
                        .WithMany("Employees")
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Entities.Rank", "Rank")
                        .WithMany("Employees")
                        .HasForeignKey("RankId");

                    b.HasOne("WebApi.Entities.Seniority", "Seniority")
                        .WithMany("Employees")
                        .HasForeignKey("SeniorityId");

                    b.Navigation("Department");

                    b.Navigation("JobTitle");

                    b.Navigation("Rank");

                    b.Navigation("Seniority");
                });

            modelBuilder.Entity("WebApi.Entities.Product", b =>
                {
                    b.HasOne("WebApi.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebApi.Entities.UserRole", b =>
                {
                    b.HasOne("WebApi.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApi.Entities.AbsenteeismType", b =>
                {
                    b.Navigation("Absenteeisms");
                });

            modelBuilder.Entity("WebApi.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("WebApi.Entities.Department", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("WebApi.Entities.JobTitle", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("WebApi.Entities.Rank", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("WebApi.Entities.Seniority", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
